apiVersion: apps/v1
kind: Deployment
metadata:
  name: trust-vault-test-deployment
  labels:
    app: trust-vault-test-deployment-label
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trust-vault-test-deployment
  template:
    metadata:
      labels:
        app: trust-vault-test-deployment
    spec:
      initContainers:
      - name: init
        image: busybox:latest
        command: ['/bin/sh', '-c', 'mkdir -p /vault-trust/config; mkdir -p /vault-trust/data']
        volumeMounts:
        - name: trust-vault-test-data
          mountPath: /vault-trust
      containers:
      - name: vault
        image: arm64v8/vault:1.12.0
        resources:
          requests:
            ephemeral-storage: 1G
          limits:
            ephemeral-storage: 1G
        imagePullPolicy: Always
        args: ["server"]
        # readinessProbe:
        #   exec:
        #    command:
        #     - sh
        #     - -c
        #     - "vault operator unseal e2c730d2a5dabb2b655e7ea8ba2b5c20e0cf1438f01af0e747e62d2c0a6ab4c0a3 &&
        #       vault operator unseal 9081affad72f01b60f31cee287adc03e00c05cb86c3c946dea2f6eef859be7cdce"
        ports:
        - containerPort: 8200
        securityContext:
          capabilities:
            add: ["IPC_LOCK"]
        env:
          - name: VAULT_ADDR
            value: "http://localhost:8200"
          - name: VAULT_LOCAL_CONFIG
            value: |             
              storage "file" {
                path     = "/vault-trust/data"
              }
             
                listener "tcp" {
                  address = "0.0.0.0:8200"
                  tls_disable = 1
                }
              disable_sealwrap = true
              ui = true
        volumeMounts:
        - name: trust-vault-test-data
          mountPath: /vault-trust
      volumes:
      - name: trust-vault-test-data
        # persistentVolumeClaim:
        #   claimName: trust-vault-test-pvc
        hostPath:
          path: /Users/arise_user/Desktop/script/kubernetes/vault/local/

